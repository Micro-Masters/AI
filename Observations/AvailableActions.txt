Available Actions

-  Available Actions, much like the other observations
   is given to us as a tensor. This means that you can 
   access the list of actions similarly to an array.
   The list of actions will be given as a list of integers.
   These integers are the ids of the actions. 

-  In order to actually make the bot choose any of the 
   available actions we must obtain the action ids.
   These are given to us in actions.py

-  You can assign variables to the action ids similarly
   the the tutorial that we followed.
   _NO_OP = actions.FUNCTIONS.no_op.id

-  To check if the desired action is within the available_actions
   tensor. Simply use an if statement in the following fashion:
  	if _NO_OP in obs.observations.available_actions:
   
-  And if you want the bot to do the action, 
	return actions.FunctionCall(_NO_OP, [])

-  The array parameter in the function call takes different object 
   types depending on the action that is being returned. 
   If you are calling a function that uses the minimap (MOVE_CAMERA,
   ATTACK_MINIMAP, etc) you have to put in x and y coordinates into 
   the array in this fashion: [(25, 25)] 
   The coordinates must be within the range of the map.  
   Some function calls also require the array to give a value of _QUEUED
   or _NOT_QUEUED. In the case of ATTACK_MINIMAP you would write:
   [_NOT_QUEUED, (25, 25)] To leave the action unqueued and also pass in the 
   x and y coordinates the units are supposed to attack in. 